/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { StyleGuides } from "./api/resources/styleGuides/client/Client";
import { StyleChecks } from "./api/resources/styleChecks/client/Client";
import { StyleSuggestions } from "./api/resources/styleSuggestions/client/Client";
import { StyleRewrites } from "./api/resources/styleRewrites/client/Client";

export declare namespace MarkupAIClient {
    export interface Options {
        environment?: core.Supplier<environments.MarkupAIEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token: core.Supplier<core.BearerToken>;
        fetcher?: core.FetchFunction;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class MarkupAIClient {
    protected _styleGuides: StyleGuides | undefined;
    protected _styleChecks: StyleChecks | undefined;
    protected _styleSuggestions: StyleSuggestions | undefined;
    protected _styleRewrites: StyleRewrites | undefined;

    constructor(protected readonly _options: MarkupAIClient.Options) {}

    public get styleGuides(): StyleGuides {
        return (this._styleGuides ??= new StyleGuides(this._options));
    }

    public get styleChecks(): StyleChecks {
        return (this._styleChecks ??= new StyleChecks(this._options));
    }

    public get styleSuggestions(): StyleSuggestions {
        return (this._styleSuggestions ??= new StyleSuggestions(this._options));
    }

    public get styleRewrites(): StyleRewrites {
        return (this._styleRewrites ??= new StyleRewrites(this._options));
    }
}
